apiVersion: v1
kind: Namespace
metadata:
  name: {{ kubeapps_dex_namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: github-client
type: Opaque
data:
  client-id: {{ kubeapps_dex_github_client_id }}
  client-secret: {{ kubeapps_dex_github_client_secret }}
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: dex
  namespace: kube-system
spec:
  chart: dex
  targetNamespace: {{ kubeapps_dex_namespace }}
  repo: https://charts.dexidp.io
  valuesContent: |-

    env:
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: github-client
            key: client-id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: github-client
            key: client-secret

      readinessProbe:
        httpGet:
          path: /healthz
          port: 5556
          scheme: HTTP

    {# volumeMounts:
      - mountPath: "{{ kubeapps_ca_ssl_dir }}"
        name: tls

    volumes:
      - name: tls
        hostPath:
          path: "{{ kubeapps_ca_ssl_dir }}"
          type: DirectoryOrCreate #}

    service:
      ports:
        http:
          nodePort: 5556

    ingress:
      enabled: true
        hosts:
        - host: {{ kubeapps_dex_issuer }}
          paths:
            - path: /

    config:
      issuer: {{ kubeapps_dex_issuer }}
      storage:
        type: kubernetes
        config:
          inCluster: true
      web:
        http: 0.0.0.0:5556
        {# tlsCert: $DEX_CERT
        tlsKey: $DEX_KEY #}
      connectors:
      - type: github
        id: github
        name: GitHub
        config:
          clientID: $GITHUB_CLIENT_ID
          clientSecret: $GITHUB_CLIENT_SECRET
          redirectURI: https://{{ kubeapps_dex_issuer }}/callback
          org: {{ kubeapps_dex_github_client_org }}
      oauth2:
        skipApprovalScreen: true
      staticClients:
      - id: example-app
        redirectURIs:
        - 'http://0.0.0.0:5556/callback'
        name: 'Example App'
        secret: ZXhhbXBsZS1hcHAtc2VjcmV0
      enablePasswordDB: true
      staticPasswords:
      - email: "admin@example.com"
        # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
        hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
        username: "admin"
        userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
