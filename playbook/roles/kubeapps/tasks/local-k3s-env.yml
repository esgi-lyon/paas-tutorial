- name: Install pre-requisites for k8s module
  ansible.builtin.pip:
    name:
      - openshift
      - pyyaml
      - kubernetes

- name: Get Ingress service infos
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: traefik
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: yes
    namespace: kube-system
  register: ingress_infos

- name: check ingress service infos available
  assert:
    that:
      - ingress_infos.resources | length > 0

- set_fact:
    kubeapps_ingress_controller_ip: "{{ ingress_infos.resources[0].spec.clusterIP }}"

- name: "Deploy local env config and chart to k3s"
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/var/lib/rancher/k3s/server/manifests/{{ item }}"
    owner: "{{ kubeapps_user }}"
    group: "{{ kubeapps_user }}"
    mode: '0644'
  loop:
    - core-dns-config-crd.yml
    - local-pebble-chart-crd.yml

- name: Wait pebble start
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: pebble
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: yes
    namespace: "{{ cert_manager_namespace }}"
  register: pebble_infos

- name: Ensure pebble resource exists
  assert:
    that:
      - pebble_infos.resources | length > 0

- name: Get Pebble Root Ca cert
  ansible.builtin.uri:
    url: https://localhost:32444/roots/0
    return_content: yes
    validate_certs: false
  register: pebble_ca

- name: Create Pebble Root Ca cert configmap
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: pebble-root-ca
        namespace: "{{ cert_manager_namespace }}"
      data:
        ca.crt: "{{ pebble_ca.content }}"

- name: Define volumes facts for CA
  set_fact:
    dex_ca_extra_volumes:
      - name: 'pebble-ca-share'
        configMap: {'name': 'pebble-ca-share'}

    dex_ca_extra_volumes_mounts:
      - name: pebble-ca-share
        mountPath: /etc/ssl/certs/pebble-ca.crt
        subPath: ca.crt
